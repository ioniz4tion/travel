<div class="weather">

	<button id="flipperBtn"><span class="glyphicon glyphicon-plus"></span></button>

	<span>Weather Conditions</span>

	<!-- <div class="weather-slide">

		<ul class="weather-bxslider"> -->
		<% if @weather.is_a? Array %>
			<% @weather.each do |city_weather| %>
			<!-- <li> -->

				<div>

					<p><%= city_weather.doc["location"]["city"] %></p>

					<p>
						<span class="temp-high"><%= city_weather.forecasts[0].high %>&deg; F</span>
						<span class="slash">/</span>
						<span class="temp-low"><%= city_weather.forecasts[0].low %>&deg; F</span>
					</p>
					
					<div class="weather-graphic">
						<span>Now:</span>
						<div class="icon icon-cloud"></div>
						<span><%= city_weather.forecasts[0].text %></span>
						<span class="temp-now">32&deg; F</span>
					</div>

				</div>
			<!-- </li> -->
			<% end %>
		<% else %>

			<%= @weather.doc["location"]["city"] %>
				<br/>
				<span>High:</span> <%= @weather.forecasts[0].high %>&deg; F
				<br/>
				<span>Low:</span> <%= @weather.forecasts[0].low %>&deg; Fs
				
				<div class="weather-graphic">
					<span>Now:</span>
					<div class="icon icon-cloud"></div>
					<span><%= @weather.forecasts[0].text %></span>
				</div>

		<% end %>
		<!-- </ul>

	</div> -->	

	<!-- So I have a weather-format.txt file under the main travel folder. You can use it to see hwo to access what data. Basically if an @ sign precedes the data name in the text file you need to use a dot. Like @weather.lat
	If the naem is not preceded by an @ but in qoutes, you need to access it with arrays. Like in the above @weather.doc["image"]["width"].
	The forecasts are an exception. the gem does a special thing and turns it into a property of the weather object for us. This means you can access the forecasts by using @weather.forecasts[i].whatever
	It is a 5-day forecast and the current day is 0, the 5th is index 4.
	If you need to loop through them you can use 

	@weather[0].forecasts.each do |forecast|
		forecast.high
		forecast.low
		forecast.text
		forecast.date.inspect
	end

	and you can loop through all forecasts from all cities with

	@weather.each do |city_weather|
		city_weather.doc["location"]["city"]
		city_weather.forecasts.each do |forecast|
			forecast.high
			forecast.low
			forecast.text
			forecast.date.inspect
		end
	end

	it just does the weather for the general packages for now. I'll add the codes for the holiday packages when I know what cities those will be at.
	-->
</div>